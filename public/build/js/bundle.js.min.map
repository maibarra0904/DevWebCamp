{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault","console","log"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas) {\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || '',\r\n            dia: +inputHiddenDia.value || ''\r\n        }\r\n\r\n        if(!Object.values(busqueda).includes('')) {\r\n            buscarEventos();\r\n\r\n            //Resaltar la hora actual\r\n            \r\n        }\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            //Reiniciar los campos ocultos y selector de horas y Dia\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            \r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            \r\n            if(horaPrevia) {\r\n                //Eliminar la clase seleccionada\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            } \r\n            \r\n            if(Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n\r\n            const {dia, categoria_id} = busqueda;\r\n\r\n            const url = `http://localhost:3000/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            //Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            //Comprobar eventos ya tomados y quitar la variable deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n\r\n            \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            \r\n            if(horaPrevia) {\r\n                //Eliminar la clase seleccionada\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            } \r\n\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            //Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        async function obtenerPonentes() {\r\n            const url = '/api/ponentes';\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n\r\n        }\r\n\r\n        function formatearPonentes( arrayPonentes = []) {\r\n\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length>1) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1) {\r\n                        return ponente;\r\n                    }\r\n                })\r\n\r\n                //console.log(ponentesFiltrados);\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n                while(listadoPonentes.firstChild) {\r\n                    listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n                }\r\n                \r\n                if(ponentesFiltrados.length >0) {\r\n                    ponentesFiltrados.forEach(ponente => {\r\n                        const ponenteHTML = document.createElement('LI');\r\n                        ponenteHTML.classList.add('listado-ponentes__ponente')\r\n                        ponenteHTML.textContent = ponente.nombre\r\n                        ponenteHTML.dataset.ponenteId = ponente.id \r\n                        ponenteHTML.onclick = seleccionarPonente\r\n    \r\n                        //Añadir ponente al dom\r\n                        listadoPonentes.appendChild(ponenteHTML);\r\n                    })\r\n                } else {\r\n                    const noResultados = document.createElement('P')\r\n                    noResultados.classList.add('listado-ponentes__no-resultado')\r\n                    noResultados.textContent = 'No hay resultados para tu búsqueda'\r\n\r\n                    listadoPonentes.appendChild(noResultados);\r\n                }\r\n\r\n                \r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            //Remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n\r\n            if(ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})()","//IIFE\r\n(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags =[];\r\n\r\n        //Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) {\r\n\r\n                if(e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return\r\n                }\r\n\r\n                e.preventDefault();\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n\r\n                tagsInput.value='';\r\n\r\n                mostrarTags();\r\n\r\n                console.log(e.keyCode);\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n})()"]}